ggplot(aes(Sample, log2(value), color = Group)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
normplot
View(normtable_subjects)
total <- cbind(Sample = rownames(target), target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt()
normplot <- normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Group)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
normplot
normplot <- normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Treatment)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
normplot
normtable_subjects <- total %>% reshape2::melt()
runApp()
total <- cbind(Sample = rownames(target), target$Treatment, total)
counts <- Biobase::exprs(e)
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
counts <- Biobase::exprs(e)
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
# counts <- Biobase::exprs(e)
target <- pData(e)
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
View(total)
normtable_subjects <- total %>% reshape2::melt() %>%
filter(value >= 0)
normtable_subjects <- total %>% reshape2::melt()
View(normtable_subjects)
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
# counts <- Biobase::exprs(e)
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt()
View(normtable_subjects)
total <- t(exprs(e))
total <- cbind(Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt()
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
total <- gather(total)
total <- t(exprs(e))
total <- gather(total)
# counts <- Biobase::exprs(e)
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
total <- t(exprs(e))
stack(total)
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt(id.vars = c("Sample", "Treatment"))
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
total <- cbind(Treatment = target$Treatment, total)
total <- t(exprs(e))
total <- cbind(Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt(id.vars = "Treatment")
normtable_subjects <- total %>% reshape2::melt() %>%
filter(value >= input$minSpC)
total <- t(exprs(e))
total <- cbind(Treatment = target$Treatment, total)
### NORMALIZATION
normtable_subjects <- total %>% reshape2::melt()
total <- t(exprs(e))
total <- cbind(Treatment = target$Treatment, total)
pivot_longer(total, -Treatment)
total %>% pivot_longer(-Treatment)
total %>% pivot_longer(-Treatment, names_to = "income", values_to = "count")
total %>% pivot_longer(cols = -Treatment, names_to = "income", values_to = "count")
target <- pData(e)
###
# spc.boxplots(exprs(e),fact = pData(e)$Treatment, minSpC=0)
# neutralized <- batch.neutralize(counts, target$Batch, half = TRUE, sqrt.trans = TRUE)
###
total <- t(exprs(e))
total <- cbind(Treatment = target$Treatment, total)
neutralized <- batch.neutralize(exprs(e), target$Batch, half = TRUE, sqrt.trans = TRUE)
neutralized <- batch.neutralize(exprs(e), target$Batch, half = TRUE, sqrt.trans = TRUE)
total <- as.data.frame(t(neutralized))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
neutralized <- batch.neutralize(exprs(e), target$Batch, half = TRUE, sqrt.trans = TRUE)
total <- as.data.frame(t(neutralized))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt()
normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Treatment)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
total <- as.data.frame(t(exprs(e)))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt() %>%
filter(value >= input$minSpC)
normtable_subjects <- total %>% reshape2::melt()
normplot1 <- normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Treatment)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
normplot1
target <- pData(e)
###
total <- as.data.frame(t(exprs(e)))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
### NOT NORMALIZED
normtable_subjects <- total %>% reshape2::melt() %>%
filter(value >= input$minSpC)
normplot1 <- normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Treatment)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
scale_color_brewer(palette = "Dark2")
#### NORMALIZED
neutralized <- batch.neutralize(exprs(e), target$Batch, half = TRUE, sqrt.trans = TRUE)
total <- as.data.frame(t(neutralized))
total <- cbind(Sample = rownames(target), Treatment = target$Treatment, total)
normtable_subjects <- total %>% reshape2::melt() %>%
filter(value >= input$minSpC)
normplot2 <- normtable_subjects %>%
ggplot(aes(Sample, log2(value), color = Treatment)) +
geom_jitter() +
geom_boxplot(color = "black", outlier.colour = NA) +
theme(legend.position = "none") +
theme_minimal() +
xlab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none") +
scale_color_brewer(palette = "Dark2")
normplot <- ggpubr::ggarrange(normplot1, normplot2,
labels = c("Not Normalized", "Normalized"),
ncol = 1, nrow = 2)
normplot
runApp()
?plotOutput
install.packages('patchwork')
library(patchwork)
normplot <- normplot1/normplot2
normplot
class(normplot)
runApp()
runApp()
runApp()
data2 <- MSnSet(exprs = neutralized, pData = pData(e))
total <- exprs(data2)
target <- pData(data2)
my_group <- as.numeric(as.factor(target$Treatment))
colSide <- brewer.pal(8, "Dark2")[my_group]
colMain <- colorRampPalette( c("green", "black", "red"), space = "rgb")(64)
heatmap(total, ColSideColors = colSide, col = colMain, labRow = NA)
total <- exprs(e)
target <- pData(e)
my_group <- as.numeric(as.factor(target$Treatment))
colSide <- brewer.pal(8, "Dark2")[my_group]
colMain <- colorRampPalette( c("green", "black", "red"), space = "rgb")(64)
heatmap(total, ColSideColors = colSide, col = colMain, labRow = NA)
res_pca1 <- mixOmics::pca(neutralized)
res_pca <- cbind(pData(e), res_pca1$x)
res_pca1 <- mixOmics::pca(t(neutralized))
res_pca <- cbind(pData(e), res_pca1$x)
View(res_pca)
runApp()
runApp()
runApp()
View(res_pca)
runApp()
runApp()
runApp()
spc.scatterplot
data2 <- MSnSet(exprs = neutralized, pData = pData(e))
dend1 <- counts.hc(data2, facs = pData(data2)[, "Treatment", drop = FALSE])
dend2 <- counts.hc(data2, facs = pData(data2)[, "Batch", drop = FALSE])
runApp()
runApp()
runApp()
install.packages("patchwork")
browseVignettes("msmsTests")
BiocManager::install("msmsTests")
browseVignettes("msmsEDA")
library(msmsEDA)
POMA::PomaMultivariate(msnset, method = "pca")
devtools::install_github("pcastellanoescuder/POMA")
POMA::PomaMultivariate(msnset, method = "pca")
library(POMA)
POMA::PomaMultivariate(msnset, method = "pca")
?pp.msms.data
?msmsEDA::pp.msms.data
?msmsEDA::norm.counts
?msmsEDA::norm.counts
msmsEDA::norm.counts
library(POMA)
data("st000284")
counts <- Biobase::exprs(st000284)
(tspc <- apply(counts, 2, sum))
tspc <- apply(counts, 2, sum)
div <- tspc/median(tspc)
e.norm <- norm.counts(raw, div)
library(msmsEDA)
e.norm <- norm.counts(raw, div)
norm <- norm.counts(raw, div)
norm <- norm.counts(st000284, div)
apply(exprs(norm), 2, sum)
View(norm)
pData(norm)
corrected <- MSnSet(exprs = exprs(norm), pData = pData(norm))
corrected
target <- pData(norm)
neutralized <- batch.neutralize(exprs(norm), target$Batch, half = TRUE, sqrt.trans = TRUE)
exprs(norm)
target$Batch
target <- pData(norm)
target
neutralized <- batch.neutralize(exprs(norm), target$Batch, half = TRUE, sqrt.trans = TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
raw <- pp.msms.data(st000284)
counts <- Biobase::exprs(raw)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
div
target <- pData(st000284)
counts <- Biobase::exprs(raw)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
div
colnames(target) <- c("Sample", "Treatment", "Batch")
div$Treatment <- target$Treatment
ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
target <- read.table("/home/pol/Escritorio/Sample.txt", header = T, sep = "\t")
proteines <- read.table("/home/pol/Escritorio/Counts.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
raw <- pp.msms.data(data)
counts <- Biobase::exprs(raw)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
barplot1 <- ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
barplot1
runApp()
View(counts)
data
View(div)
pData(data)
runApp()
raw <- pp.msms.data(st000284)
raw
counts <- Biobase::exprs(raw)
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
raw <- pp.msms.data(data)
counts <- Biobase::exprs(raw)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
barplot1 <- ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
counts <- Biobase::exprs(raw)
tspc <- apply(counts, 2, sum)
div <- tspc/median(tspc)
norm <- norm.counts(raw, div)
counts <- Biobase::exprs(norm)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
barplot2 <- ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
target <- pData(norm)
neutralized <- batch.neutralize(exprs(norm), target$Batch, half = TRUE, sqrt.trans = TRUE)
corrected <- MSnSet(exprs = exprs(neutralized), pData = pData(norm))
counts <- Biobase::exprs(corrected)
tcnts <- apply(counts, 2, sum)
exprs(neutralized)
corrected <- MSnSet(exprs = as.matrix(neutralized), pData = pData(norm))
counts <- Biobase::exprs(corrected)
tcnts <- apply(counts, 2, sum)
medt <- median(tcnts)
div <- data.frame(median = tcnts/medt)
div$sample <- rownames(div)
div$Treatment <- target$Treatment
barplot3 <- ggplot(div, aes(x = sample, y = median, fill = Treatment)) +
geom_bar(stat="identity")+
theme_minimal() +
xlab("") +
geom_hline(yintercept = 1, linetype = "dashed") +
scale_fill_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top")
return(list(barplot1 = barplot1, barplot2 = barplot2, barplot3 = barplot3,
raw = raw, norm = norm, corrected = corrected))
barplot3
runApp()
runApp()
res_pca1 <- mixOmics::pca(exprs(raw))
res_pca1 <- mixOmics::pca(exprs(raw))
res_pca <- cbind(pData(e), res_pca1$x)
res_pca <- cbind(pData(raw), res_pca1$x)
res_pca1 <- mixOmics::pca(t(exprs(raw)))
res_pca <- cbind(pData(raw), res_pca1$x)
runApp()
runApp()
spc_scatterplot <- function(counts, treat, trans = "log2", minSpC = 2, minLFC = 1){
treat <- as.factor(treat)
mspc <- data.frame(t(apply(counts, 1, function(x) tapply(x, treat, mean))))
mx <- apply(mspc[, 1:2], 1, max)
mn <- apply(mspc[, 1:2], 1, min)
fl <- apply(mspc[, 1:2], 1, function(x) max(x) >= minSpC) & abs(log2(mx/mn)) >= minLFC
if (trans == "none") {
s_mspc <- mspc[fl ,]
p <- ggplot(mspc, aes(mspc[,1], mspc[,2])) +
geom_point() +
geom_point(s_mspc, mapping = aes(x = s_mspc[,1], y = s_mspc[,2], color = "red")) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
geom_abline(intercept = 0, slope = 2, linetype = "dashed", color = "navy") +
geom_abline(intercept = 0, slope = 0.5, linetype = "dashed", color = "navy") +
xlab(paste("mean SpC(", colnames(mspc)[1], ")", sep = "")) +
ylab(paste("mean SpC(", colnames(mspc)[2], ")", sep = "")) +
theme_minimal() +
theme(legend.position = "none")
}
if (trans == "sqrt") {
sqrtm <- sqrt(mspc)
s_mspc <- sqrtm[fl ,]
p <- ggplot(sqrtm, aes(sqrtm[,1], sqrtm[,2])) +
geom_point() +
geom_point(s_mspc, mapping = aes(x = s_mspc[,1], y = s_mspc[,2], color = "red")) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
geom_abline(intercept = 0, slope = sqrt(2), linetype = "dashed", color = "navy") +
geom_abline(intercept = 0, slope = 1/sqrt(2), linetype = "dashed", color = "navy") +
xlab(paste("root mean SpC(", colnames(mspc)[1], ")", sep = "")) +
ylab(paste("root mean SpC(", colnames(mspc)[2], ")", sep = "")) +
theme_minimal() +
theme(legend.position = "none")
}
if (trans == "log2") {
logm <- log2(mspc + 0.01)
mxx <- max(logm[, 1])
mxy <- max(logm[, 2])
mx <- max(mxx, mxy)
s_mspc <- logm[fl ,]
p <- ggplot(logm, aes(logm[,1], logm[,2])) +
geom_point() +
geom_point(s_mspc, mapping = aes(x = s_mspc[,1], y = s_mspc[,2], color = "red")) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
geom_abline(intercept = log2(2), slope = 1, linetype = "dashed", color = "navy") +
geom_abline(intercept = -log2(2), slope = 1, linetype = "dashed", color = "navy") +
xlab(paste("log2(mean SpC(", colnames(mspc)[1], "))", sep = "")) +
ylab(paste("log2(mean SpC(", colnames(mspc)[2], "))", sep = "")) +
theme_minimal() +
theme(legend.position = "none")
}
return(p)
}
target <- pData(corrected)
spc_scatterplot(corrected, target$Treatment,
trans = input$trans, minSpC = input$minSpC,
minLFC = input$minLFC)
spc_scatterplot(corrected, target$Treatment,
trans = "log2", minSpC = 2,
minLFC = 2)
spc_scatterplot(exprs(corrected), target$Treatment,
trans = "log2", minSpC = 2,
minLFC = 2)
runApp()
runApp()
total <- exprs(corrected)
target <- pData(corrected)
library(heatmap)
library(heatmap2)
library(heatmap.2)
library(gplots)
heatmap.2(total)
library(gplots)
total <- exprs(corrected)
target <- pData(corrected)
runApp()
heatmap(total)
