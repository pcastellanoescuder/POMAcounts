runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?pp.msms.data
?DESeq
?DESeq2::DESeq
data(msms.dataset)
proteines <- Biobase::exprs(msms.dataset) %>%
as.data.frame() %>%
rownames_to_column("feature") %>%
mutate(gene = "GN=NA ") %>%
dplyr::select(gene, feature, everything())
data(msms.dataset)
target <- Biobase::pData(msms.dataset) %>%
rownames_to_column("ID")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
if(!is.null(input$contents_tar_rows_selected)){
target <- target[input$contents_tar_rows_selected ,]
proteines <- proteines[, input$contents_tar_rows_selected]
}
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
data
target <- pData(data)
counts <- data %>%
MSnbase::exprs()
View(counts)
View(target)
counts <- data %>%
MSnbase::exprs()
coldata <- target %>%
rownames_to_column("sample") %>%
mutate(Treatment = as.factor(Treatment))
# Construct a DESeqDataSet object
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = coldata,
design = ~ Treatment)
library(DESeq2)
# Construct a DESeqDataSet object
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = coldata,
design = ~ Treatment)
# Run DESeq2
dds <- DESeq(dds)
View(coldata)
results(dds)
# Run DESeq2
dds <- DESeq(dds)
# Construct a DESeqDataSet object
dds <- DESeqDataSetFromMatrix(countData = counts,
colData = coldata,
design = ~ Treatment)
# Run DESeq2
dds <- DESeq(dds)
res <- results(dds)
res
res_df <- as_tibble(res, rownames = "gene_id")
View(res_df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
View(target)
View(proteines)
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
View(proteines)
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
library(tidyverse)
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
proteines <- Biobase::exprs(msms.dataset) %>%
as.data.frame() %>%
rownames_to_column("feature") %>%
mutate(gene = "GN=NA ") %>%
dplyr::select(gene, feature, everything())
library(msmsTests)
library(Biobase)
library(msmsEDA)
proteines <- Biobase::exprs(msms.dataset) %>%
as.data.frame() %>%
rownames_to_column("feature") %>%
mutate(gene = "GN=NA ") %>%
dplyr::select(gene, feature, everything())
data(msms.dataset)
proteines <- Biobase::exprs(msms.dataset) %>%
as.data.frame() %>%
rownames_to_column("feature") %>%
mutate(gene = "GN=NA ") %>%
dplyr::select(gene, feature, everything())
View(proteines)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines$test <- proteines$Gene
proteines <- read.table("/Users/pol/Desktop/Counts[99].txt", header = T, sep = "\t")
View(proteines)
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
proteines <- column_to_rownames(proteines, "Accession")
as.matrix(proteines)
shiny::runApp()
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
View(proteines)
rownames(proteines) <- make.names(rownames(proteines))
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene)
library(tidyverse)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene)
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n())
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n())
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n())
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n())
proteines %>% filter(duplicated(Gene))
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n())
proteines %>% filter(duplicated(Gene))
library(tidyverse)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = ".") %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0(".")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0(".")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt")
runApp()
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
View(proteines)
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0(";")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("dp")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("dp")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t", row.names = FALSE)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
runApp()
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
View(proteines)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = paste0("")) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
data
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
View(proteines)
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
prot <- proteines
rownames(prot) %>%
stringr::str_remove(pattern = "^.*;")
names <- rownames(prot) %>%
stringr::str_remove(pattern = "^.*;")
rownames(prot) <- names
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
# proteines$Gene <- make.names(proteines$Gene)
proteines <- proteines %>%
mutate(ACC = Gene) %>%
relocate(ACC, .after = Gene) %>%
slice(17L:n()) %>%
filter(!duplicated(Gene))
write.table(proteines, "/Users/pol/Desktop/Counts_pol.txt", sep = "\t", row.names = FALSE)
target <- read.table("/Users/pol/Desktop/Samples.txt", header = T, sep = "\t")
proteines <- read.table("/Users/pol/Desktop/Counts_pol.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
prot <- proteines
names <- rownames(prot) %>%
stringr::str_remove(pattern = "^.*;")
rownames(prot) <- names
names
runApp()
shiny::runApp()
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
target <- read.table("/Users/pol/Desktop/Sample vehicle vs DR.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
res_pca1 <- mixOmics::pca(t(exprs(raw)))
raw <- pp.msms.data(data)
res_pca1 <- mixOmics::pca(t(exprs(raw)))
res_pca <- cbind(pData(raw), res_pca1$x) # change "x" for "variates$X"
res_pca <- cbind(pData(raw), res_pca1$variates$X) # change "x" for "variates$X"
runApp()
res_pca1 <- mixOmics::pca(t(exprs(raw)))
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
proteines <- read.table("/Users/pol/Desktop/Counts.txt", header = T, sep = "\t")
target <- read.table("/Users/pol/Desktop/Sample vehicle vs DR.txt", header = T, sep = "\t")
colnames(target) <- c("Sample", "Treatment", "Batch")
colnames(proteines)[2] <- "Accession"
colnames(proteines)[1] <- "gene_name"
proteines <- proteines %>%
mutate(Accession = paste0(gene_name, ";", Accession))
target <- column_to_rownames(target, "Sample")
proteines <- column_to_rownames(proteines, "Accession")
proteines <- proteines[, colnames(proteines) %in% rownames(target)]
data <- MSnbase::MSnSet(exprs = as.matrix(proteines), pData = target)
raw <- pp.msms.data(data)
res_pca1 <- mixOmics::pca(t(exprs(raw)))
res_pca <- cbind(pData(raw), res_pca1$variates$X)
res_pca1$prop_expl_var$X
runApp()
